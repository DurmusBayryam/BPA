{
  "Uuid": "84d0cadd-ec64-439d-9780-aa2a59d8c60b",
  "IsCustomNode": false,
  "Description": "",
  "Name": "AjouterLiens",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "import sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('System.Drawing')\r\nclr.AddReference('System.Windows.Forms')\r\nimport System.Drawing\r\nimport System.Windows.Forms\r\n\r\nfrom System.Drawing import *\r\nfrom System.Windows.Forms import *\r\n\r\nclr.AddReference('System.Data')\r\nfrom System.Data import *\r\nfrom System import Array\r\n\r\nclass Form24(Form):\r\n    def __init__(self):\r\n        self._tableData = DataTable(\"BPA Architecture\")\r\n        self._tableData.Columns.Add(\"Lien\", System.String)\r\n        self._tableData.Columns.Add(\"Chemin\", System.Object)\r\n        self.out = []\r\n        self.InitializeComponent()\r\n\r\n    def InitializeComponent(self):\r\n        self._button1 = System.Windows.Forms.Button()\r\n        self._buttonFilePath = System.Windows.Forms.Button()\r\n        self._dataGridView = System.Windows.Forms.DataGridView()\r\n        self._buttonDeleteFile = System.Windows.Forms.Button()\r\n        self._comboBoxPosition = DataGridViewComboBoxColumn()\r\n\r\n        # Diğer kontrol elemanlarını ekle\r\n        self._button1.Anchor = System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right\r\n        self._button1.Location = System.Drawing.Point(422, 320)\r\n        self._button1.Name = \"button1\"\r\n        self._button1.Size = System.Drawing.Size(75, 27)\r\n        self._button1.TabIndex = 2\r\n        self._button1.Text = \"Terminer\"\r\n        self._button1.UseVisualStyleBackColor = True\r\n        self._button1.Click += self.Button1Click\r\n\r\n        self._buttonFilePath.Anchor = System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left\r\n        self._buttonFilePath.Location = System.Drawing.Point(12, 320)\r\n        self._buttonFilePath.Name = \"buttonFilePath\"\r\n        self._buttonFilePath.Size = System.Drawing.Size(104, 27)\r\n        self._buttonFilePath.TabIndex = 4\r\n        self._buttonFilePath.Text = \"Chemin Depuis\"\r\n        self._buttonFilePath.UseVisualStyleBackColor = True\r\n        self._buttonFilePath.Click += self.ButtonFilePathClick\r\n\r\n        self._buttonDeleteFile.Anchor = System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left\r\n        self._buttonDeleteFile.Location = System.Drawing.Point(122, 320)\r\n        self._buttonDeleteFile.Name = \"buttonDeleteFile\"\r\n        self._buttonDeleteFile.Size = System.Drawing.Size(104, 27)\r\n        self._buttonDeleteFile.TabIndex = 5\r\n        self._buttonDeleteFile.Text = \"Supprimer\"\r\n        self._buttonDeleteFile.UseVisualStyleBackColor = True\r\n        self._buttonDeleteFile.Click += self.ButtonDeleteFileClick\r\n\r\n\r\n        self._dataGridView.Anchor = System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left | System.Windows.Forms.AnchorStyles.Right\r\n        self._dataGridView.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize\r\n        self._dataGridView.Location = System.Drawing.Point(12, 30)\r\n        self._dataGridView.Name = \"dataGridView1\"\r\n        self._dataGridView.Size = System.Drawing.Size(480, 244)\r\n        self._dataGridView.TabIndex = 6\r\n        self._dataGridView.Columns.Add(self._comboBoxPosition) \r\n        self._comboBoxPosition.HeaderText = \"Position\"\r\n        options = Array[object]([\"Point de Base du projet\", \"A l'émplacement partagé\"])\r\n        self._comboBoxPosition.Items.AddRange(options)  \r\n        self._comboBoxPosition.DisplayStyle = DataGridViewComboBoxDisplayStyle.ComboBox\r\n        self._dataGridView.EditingControlShowing += self.DataGridViewEditingControlShowing \r\n\r\n        self.ClientSize = System.Drawing.Size(510, 360)\r\n        self.Controls.Add(self._buttonDeleteFile)\r\n        self.Controls.Add(self._dataGridView)\r\n        self.Controls.Add(self._buttonFilePath)\r\n        self.Controls.Add(self._button1)\r\n        self.Name = \"Durmus Bayryam\"\r\n        self.Text = \"BPA Architecture\"\r\n\r\n    def Button1Click(self, sender, e):\r\n        self.Close()\r\n\r\n    def ButtonFilePathClick(self, sender, e):\r\n        openFileDialog = System.Windows.Forms.OpenFileDialog()\r\n        openFileDialog.Filter = \"All Files|*.*\"\r\n        openFileDialog.Title = \"Chemin Depuis\"\r\n        \r\n        result = openFileDialog.ShowDialog()\r\n        selected_file = openFileDialog.FileName\r\n        self.AddFileToDataTable(selected_file)\r\n\r\n    def AddFileToDataTable(self, file_path):\r\n        new_row = self._tableData.NewRow()\r\n        new_row[\"Lien\"] = \"Lien\"\r\n        new_row[\"Chemin\"] = file_path\r\n        self._tableData.Rows.Add(new_row)\r\n        self.RefreshDataGridView()\r\n\r\n    def RefreshDataGridView(self):\r\n        self._dataGridView.DataSource = None\r\n        self._dataGridView.DataSource = self._tableData\r\n\r\n    def DataGridViewEditingControlShowing(self, sender, e):\r\n        if isinstance(e.Control, ComboBox):\r\n            comboBox = e.Control\r\n            comboBox.DropDownStyle = ComboBoxStyle.DropDown\r\n            comboBox.AutoCompleteMode = AutoCompleteMode.SuggestAppend\r\n            comboBox.AutoCompleteSource = AutoCompleteSource.ListItems\r\n            options = Array[object]([\"Point de Base du projet\", \"A l'émplacement partagé\"])\r\n            comboBox.DataSource = options\r\n\r\n\r\n    def ButtonDeleteFileClick(self, sender, e):\r\n        selected_rows = self._dataGridView.SelectedRows\r\n        if selected_rows.Count > 0:\r\n            index = selected_rows[0].Index\r\n            self._tableData.Rows.RemoveAt(index)\r\n            self.RefreshDataGridView()\r\n        else:\r\n            MessageBox.Show(\"Sélectionnez le fichier que vous souhaitez supprimer.\", \"HEY!\", MessageBoxButtons.OK, MessageBoxIcon.Warning)\r\n\r\nobjForm = Form24()\r\nobjForm.ShowDialog()\r\n\r\nposition = []\r\nresult = []\r\nfor row in objForm._tableData.Rows:\r\n    chemin = row[\"Chemin\"]\r\n    result.append(chemin)\r\n    \r\nfor rowIndex in range(objForm._dataGridView.Rows.Count):\r\n    cell = objForm._dataGridView.Rows[rowIndex].Cells[\"\"]\r\n    if cell is not None and cell.Value is not None:\r\n        position.append(cell.Value)\r\n\r\nOUT = result, position\r\n",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "fef838af1af24f498c64d673f3b47e1d",
      "NodeType": "PythonScriptNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8ca4083f055d4d2faf71170df9c0a231",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "79ee724264ea4f11acb4790f2303b048",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "dff327709f6148c5ad765cf40388c23a",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "893b3098e57a4f20a00b685d4ac7a8a2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "055e94e2ca6d439fb843f96413cede43",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "x[0];\nx[1];"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "\n# part of the code originally created by Nicklas Østertgaard  nvo@bimshark.com / nvo@shl.fk  and/or Augusto Goncalves (AEC Devblog)\n# Workset management, loop, pin and site location settings by Jonathan ATGER (jonathan.atger@yahoo.fr)\n#bug correction by eric stimmel\n\nimport clr\n\nif IN[3] != None :\n\tclr.AddReference(\"System\")\n\tfrom System.Collections.Generic import List\n\n# Import ToDSType(bool) extension method\nclr.AddReference(\"RevitNodes\")\nimport Revit\nclr.ImportExtensions(Revit.Elements)\n\n# Import DocumentManager and TransactionManager\nclr.AddReference(\"RevitServices\")\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\nfrom System.Collections.Generic import *\n\n# Import RevitAPI\nclr.AddReference(\"RevitAPI\")\nimport Autodesk\nfrom Autodesk.Revit.DB import *\n\nimport sys\npyt_path = r'C:\\Program Files (x86)\\IronPython 2.7\\Lib'\nsys.path.append(pyt_path)\nimport System\n\ndoc = DocumentManager.Instance.CurrentDBDocument\n\n# Start Transaction\nTransactionManager.Instance.EnsureInTransaction(doc)\n\nif isinstance(IN[0], list) : in_links = IN[0] \nelse : in_links = [IN[0]]\n\nif isinstance(IN[1], list) : in_ws = IN[1] \nelse : in_ws = [IN[1]]\n\npinned = IN[2]\n\nif IN[3] != None :\n\tif isinstance(IN[3], list) : closedwsnames = IN[3] \n\telse : closedwsnames = [IN[3]]\nelse : closedwsnames = None\n\n# number of elements\ntry : numlinks = len(in_links)\nexcept : OUT = 'Input a filepath'\n\t\ntry : numworksets = len(in_ws)\nexcept : numworksets = 0\n\n#check list lengths\nif numlinks == numworksets : listlength = True\nelse : listlength = False\n\ndef linkmodel (fpath, doc, pin) :\n\t# Create the Revit Link Type\n\tmpu = ModelPathUtils.ConvertUserVisiblePathToModelPath(fpath)\n\t\n\tif closedwsnames == None :\n\t\tlnkoptions = RevitLinkOptions(\"\")\n\t\n\telse :\n\t\t#Workset configuration\n\t\ttry :\n\t\t\tworksets = WorksharingUtils.GetUserWorksetInfo(mpu)\n\t\t\tows = []\n\t\t\t\n\t\t\tfor ws in worksets :\n\t\t\t\tname = ws.Name\n\t\t\t\twsid = ws.Id\n\t\t\t\tclosed = []\t\n\t\t\t\tfor wsn in closedwsnames :\n\t\t\t\t\tif wsn in name :\n\t\t\t\t\t\tclosed.append(wsid)\n\t\t\t\tif wsid not in closed :\n\t\t\t\t\tows.append(wsid)\n\t\t\t\t\n\t\t\t#The workset Ids collected put in an IList format\t\t\t\n\t\t\topenwsids = List[WorksetId](ows)\t\t\t\n\t\t\t\n\t\t\t#Directly creating the RevitLinkOptions raises an error, so I create it once, and then extract the Worksetconfiguration to modify it. Had some issues with the Close() method of the WorksetConfiguration, Open() worked instead\n\t\t\twc = WorksetConfiguration(WorksetConfigurationOption.CloseAllWorksets)\n\t\t\tlnkoptions = RevitLinkOptions(False, wc)\n\t\t\twc2 = lnkoptions.GetWorksetConfiguration()\n\t\t\twc2.Open(openwsids)\n\t\t\tlnkoptions = RevitLinkOptions(False, wc2)\n\t\t\t\n\t\texcept :\n\t\t\tlnkoptions = RevitLinkOptions(\"\")\n\t\t\t\n\t\t\t\n\t#Create RevitLinkType\n\tloadedLnkType = RevitLinkType.Create(doc, mpu, lnkoptions)\n\t\n\t# Create the Revit Link Instance\n\tlnkInstance = RevitLinkInstance.Create(doc, loadedLnkType.ElementId)\n\tlnkInstance.MoveBasePointToHostBasePoint(True)\n\t\n\t#Pin link\n\tlnkInstance.Pinned = pin\n\n\treturn lnkInstance\n\ntry:\n\t# Number of worksets input and filepaths input are different\n\tif IN[1] and listlength == False :\n\t\tOUT = \"The number of worksets doesn't match the number of links\"\n\t\t\n\t\t\n\t# Multiple Worksets input\n\telif IN[1] and listlength == True  :\n\t\n\t\t#Get WorksetTable and current workset\n\t\twstable = doc.GetWorksetTable()\n\t\tactivewsid = wstable.GetActiveWorksetId()\n\t\t\n\t\t#Create list for output\n\t\tlinks = []\n\t\t\n\t\tfor fpath, ws in zip(in_links, in_ws) :\n\t\t\n\t\t\t# Get WorksetId\n\t\t\twssimpleid = ws.Id\n\t\t\twsid = WorksetId(wssimpleid)\n\t\t\t\t\n\t\t\t# Set the workset\n\t\t\tWorksetTable.SetActiveWorksetId(wstable, wsid)\n\t\t\t\n\t\t\t# Create the Revit Link Type and Link Instance\n\t\t\ta = linkmodel(fpath, doc, pinned)\n\t\t\t\n\t\t\t#add created link to output\n\t\t\tlinks.append(a)\n\t\t\t\t\t\t\t\n\t\t#reset current workset\t\n\t\tWorksetTable.SetActiveWorksetId(wstable, activewsid)\n\t\t\n\t\t#output\n\t\tOUT = links\t\n\n\t# No worksets input\n\telse :\n\t\tlinks = []\n\t\tfor fpath in in_links :\n\t\t\ta = linkmodel(fpath, doc, pinned)\n\t\t\tlinks.append(a)\n\t\tOUT=links\n\t\nexcept:\n    # if error accurs anywhere in the process catch it\n    import traceback\n    errorReport = traceback.format_exc()\n    OUT = errorReport \n\n# End Transaction\nTransactionManager.Instance.TransactionTaskDone()\n\n",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "744307748a9b4306929885adf0e8b6d0",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "cbf4802f4a284d5c9fe3cf897031faef",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0ef06c7f7c4c4a9a9479434b3bc9a763",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8fb549f5b5e247fd9288858b070ce088",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e4391538101c4942a38d3ddc89f30da8",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "19d5115011564c36a51fde0fd6ed47c6",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "7ef48a5819464c3ca2eb23608176b8d4",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "e2a44568745e4c4a91aa089429761b2e",
          "Name": "None",
          "Description": "None",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b92a0ba576cd4782a705ad2637036c20",
          "Name": "",
          "Description": "Worksets_optional",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "/*Input the worksets the links will be placed on.\nIf no workset is placed here, the links will be placed on current workset.*/\nWorksets_optional: var[]..[] = None;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "65c5b4d99ecc4bc1a6bc7bc7d35c0579",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3dd2abec0afc41fe9e70858be5b26dd2",
          "Name": "",
          "Description": "ClosedWorksetNamesContain_optional",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "/*Input a string of character (or a list of strings) contained in the name of the worksets to keep closed in links*/\nClosedWorksetNamesContain_optional: var[]..[] = null;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "4486620b53c343a1b5d3c7c30110afef",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2763411cf563461caadee15d8b50a4bc",
          "Name": "",
          "Description": "PinLinks_optional",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "/*Input 'true' if you want to pin the links in place.*/\nPinLinks_optional: bool = false;"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "\n# part of the code originally created by Nicklas Østertgaard  nvo@bimshark.com / nvo@shl.fk  and/or Augusto Goncalves (AEC Devblog)\n# Workset management, loop, pin and site location settings by Jonathan ATGER (jonathan.atger@yahoo.fr)\n# bug correction by eric stimmel\n\nimport clr\n\nif IN[3] != None :\n\tclr.AddReference(\"System\")\n\tfrom System.Collections.Generic import List\n\n# Import ToDSType(bool) extension method\nclr.AddReference(\"RevitNodes\")\nimport Revit\nclr.ImportExtensions(Revit.Elements)\n\n# Import DocumentManager and TransactionManager\nclr.AddReference(\"RevitServices\")\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\nfrom System.Collections.Generic import *\n\n# Import RevitAPI\nclr.AddReference(\"RevitAPI\")\nimport Autodesk\nfrom Autodesk.Revit.DB import *\n\nimport sys\npyt_path = r'C:\\Program Files (x86)\\IronPython 2.7\\Lib'\nsys.path.append(pyt_path)\nimport System\n\ndoc = DocumentManager.Instance.CurrentDBDocument\n\n# Start Transaction\nTransactionManager.Instance.EnsureInTransaction(doc)\n\nif isinstance(IN[0], list) : in_links = IN[0] \nelse : in_links = [IN[0]]\n\nif isinstance(IN[1], list) : in_ws = IN[1] \nelse : in_ws = [IN[1]]\n\npinned = IN[2]\n\nif IN[3] != None :\n\tif isinstance(IN[3], list) : closedwsnames = IN[3] \n\telse : closedwsnames = [IN[3]]\nelse : closedwsnames = None\n\n# number of elements\ntry : numlinks = len(in_links)\nexcept : OUT = 'Input a filepath'\n\t\ntry : numworksets = len(in_ws)\nexcept : numworksets = 0\n\n#check list lengths\nif numlinks == numworksets : listlength = True\nelse : listlength = False\n\ndef linkmodel (fpath, doc, pin) :\n\t# Create the Revit Link Type\n\tmpu = ModelPathUtils.ConvertUserVisiblePathToModelPath(fpath)\n\t\n\tif closedwsnames == None :\n\t\tlnkoptions = RevitLinkOptions(\"\")\n\t\n\telse :\n\t\t#Workset configuration\n\t\ttry :\n\t\t\tworksets = WorksharingUtils.GetUserWorksetInfo(mpu)\n\t\t\tows = []\n\t\t\t\n\t\t\tfor ws in worksets :\n\t\t\t\tname = ws.Name\n\t\t\t\twsid = ws.Id\n\t\t\t\tclosed = []\t\n\t\t\t\tfor wsn in closedwsnames :\n\t\t\t\t\tif wsn in name :\n\t\t\t\t\t\tclosed.append(wsid)\n\t\t\t\tif wsid not in closed :\n\t\t\t\t\tows.append(wsid)\n\t\t\t\t\n\t\t\t#The workset Ids collected put in an IList format\t\t\t\n\t\t\topenwsids = List[WorksetId](ows)\t\t\t\n\t\t\t\n\t\t\t#Directly creating the RevitLinkOptions raises an error, so I create it once, and then extract the Worksetconfiguration to modify it. Had some issues with the Close() method of the WorksetConfiguration, Open() worked instead\n\t\t\twc = WorksetConfiguration(WorksetConfigurationOption.CloseAllWorksets)\n\t\t\tlnkoptions = RevitLinkOptions(False, wc)\n\t\t\twc2 = lnkoptions.GetWorksetConfiguration()\n\t\t\twc2.Open(openwsids)\n\t\t\tlnkoptions = RevitLinkOptions(False, wc2)\n\t\t\t\n\t\texcept :\n\t\t\tlnkoptions = RevitLinkOptions(\"\")\n\t\t\t\n\t\t\t\n\t#Create RevitLinkType\n\tloadedLnkType = RevitLinkType.Create(doc, mpu, lnkoptions)\n\t\n\t# Create the Revit Link Instance\n\tlnkInstance = RevitLinkInstance.Create(doc, loadedLnkType.ElementId, ImportPlacement.Shared)\n\t\n\t#Pin link\n\tlnkInstance.Pinned = pin\n\n\treturn lnkInstance\n\ntry:\n\t# Number of worksets input and filepaths input are different\n\tif IN[1] and listlength == False :\n\t\tOUT = \"The number of worksets doesn't match the number of links\"\n\t\t\n\t\t\n\t# Multiple Worksets input\n\telif IN[1] and listlength == True  :\n\t\n\t\t#Get WorksetTable and current workset\n\t\twstable = doc.GetWorksetTable()\n\t\tactivewsid = wstable.GetActiveWorksetId()\n\t\t\n\t\t#Create list for output\n\t\tlinks = []\n\t\t\n\t\tfor fpath, ws in zip(in_links, in_ws) :\n\t\t\n\t\t\t# Get WorksetId\n\t\t\twssimpleid = ws.Id\n\t\t\twsid = WorksetId(wssimpleid)\n\t\t\t\t\n\t\t\t# Set the workset\n\t\t\tWorksetTable.SetActiveWorksetId(wstable, wsid)\n\t\t\t\n\t\t\t# Create the Revit Link Type and Link Instance\n\t\t\ta = linkmodel(fpath, doc, pinned)\n\t\t\t\n\t\t\t#add created link to output\n\t\t\tlinks.append(a)\n\t\t\t\t\t\t\t\n\t\t#reset current workset\t\n\t\tWorksetTable.SetActiveWorksetId(wstable, activewsid)\n\t\t\n\t\t#output\n\t\tOUT = links\t\n\n\t# No worksets input\n\telse :\n\t\tlinks = []\n\t\tfor fpath in in_links :\n\t\t\ta = linkmodel(fpath, doc, pinned)\n\t\t\tlinks.append(a)\n\t\tOUT=links\n\t\nexcept:\n    # if error accurs anywhere in the process catch it\n    import traceback\n    errorReport = traceback.format_exc()\n    OUT = errorReport \n\n# End Transaction\nTransactionManager.Instance.TransactionTaskDone()\n\n",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "5130439c11b643618a4aaa128803b30c",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "4d591ae319b6489b9a3527f6364668ef",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4691e07ff14a439d85a070461e2307fb",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "58df718c17c4427a99f161d500e4c625",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1e89dc17e1e04166823cff2862361f78",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "236f67017c284d3baeb7c0a70b093b79",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "38492a0920064bbf80f5adc1bb17e835",
      "NodeType": "CodeBlockNode",
      "Inputs": [
        {
          "Id": "1099402e4429465998bc2105f5af6e67",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "365fc670134b470eb4794f05fb86b9fe",
          "Name": "e",
          "Description": "e",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ea649a6c526e464cbe61c17387b24106",
          "Name": "",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "407c1540b4c742a4b6372e5cb0108249",
          "Name": "",
          "Description": "b",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "16336c5fc15d472badfea04ee09771fa",
          "Name": "",
          "Description": "c",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "a=\tx==\"Point de Base du projet\" ? true:false;\nb=\tDSCore.List.FilterByBoolMask(e,a)[\"in\"];\nc=\tDSCore.List.FilterByBoolMask(e,a)[\"out\"];"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "ecce77dc-1290-438e-a056-970b256fd553",
      "FunctionType": "Graph",
      "Id": "3acf0d9f98374929bc8e0b07b6ed3370",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9695b36a620548679b2e9cef8581ba1f",
          "Name": "passThrough",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24cfe034a0a9495e8e156bbf616a89c0",
          "Name": "waitFor",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "406d2131c5704a659557524ed333334f",
          "Name": "passThrough",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Forces a sequential order of execution. The node wired into the output of the Passthrough node will be executed *after* the node wired into the waitFor input (e.g. important for some Revit operations). The value of the passThrough input will be passed on to the node wired into the output port of the Passthrough node."
    }
  ],
  "Connectors": [
    {
      "Start": "8ca4083f055d4d2faf71170df9c0a231",
      "End": "dff327709f6148c5ad765cf40388c23a",
      "Id": "c967204863944afa995603b5582a1730",
      "IsHidden": "False"
    },
    {
      "Start": "893b3098e57a4f20a00b685d4ac7a8a2",
      "End": "365fc670134b470eb4794f05fb86b9fe",
      "Id": "f8ab6d12397b492cbbcd4521c2661658",
      "IsHidden": "False"
    },
    {
      "Start": "055e94e2ca6d439fb843f96413cede43",
      "End": "1099402e4429465998bc2105f5af6e67",
      "Id": "b2d98f794bdf4ea5af7a2e9cae1993f7",
      "IsHidden": "False"
    },
    {
      "Start": "19d5115011564c36a51fde0fd6ed47c6",
      "End": "24cfe034a0a9495e8e156bbf616a89c0",
      "Id": "db06c44a90c44909b95f9c477d77d216",
      "IsHidden": "False"
    },
    {
      "Start": "b92a0ba576cd4782a705ad2637036c20",
      "End": "0ef06c7f7c4c4a9a9479434b3bc9a763",
      "Id": "9db7321d9df2445eb318b58a140321ec",
      "IsHidden": "False"
    },
    {
      "Start": "b92a0ba576cd4782a705ad2637036c20",
      "End": "4691e07ff14a439d85a070461e2307fb",
      "Id": "222d1117dba241c3b65bf6ca13a3034b",
      "IsHidden": "False"
    },
    {
      "Start": "3dd2abec0afc41fe9e70858be5b26dd2",
      "End": "e4391538101c4942a38d3ddc89f30da8",
      "Id": "cae2aa6335464490822e5872f609b9c8",
      "IsHidden": "False"
    },
    {
      "Start": "3dd2abec0afc41fe9e70858be5b26dd2",
      "End": "1e89dc17e1e04166823cff2862361f78",
      "Id": "5d5c5abf4e29472998b784c48a360b96",
      "IsHidden": "False"
    },
    {
      "Start": "2763411cf563461caadee15d8b50a4bc",
      "End": "8fb549f5b5e247fd9288858b070ce088",
      "Id": "5b1de82748c94a2889689321f909efd5",
      "IsHidden": "False"
    },
    {
      "Start": "2763411cf563461caadee15d8b50a4bc",
      "End": "58df718c17c4427a99f161d500e4c625",
      "Id": "40f3c782472f4ce4b44954af045f89fa",
      "IsHidden": "False"
    },
    {
      "Start": "407c1540b4c742a4b6372e5cb0108249",
      "End": "cbf4802f4a284d5c9fe3cf897031faef",
      "Id": "1883a1d056e54784884f91dcea0bed91",
      "IsHidden": "False"
    },
    {
      "Start": "16336c5fc15d472badfea04ee09771fa",
      "End": "9695b36a620548679b2e9cef8581ba1f",
      "Id": "9b5ef5ef50a94c33b320bd5880836b32",
      "IsHidden": "False"
    },
    {
      "Start": "406d2131c5704a659557524ed333334f",
      "End": "4d591ae319b6489b9a3527f6364668ef",
      "Id": "3aabf705e77f4eb8b16796753ac8c401",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [
    "ecce77dc-1290-438e-a056-970b256fd553"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "Clockwork for Dynamo 2.x",
      "Version": "2.6.0",
      "ReferenceType": "Package",
      "Nodes": [
        "3acf0d9f98374929bc8e0b07b6ed3370"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.18",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "6.0",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.18.1.5096",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "_Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Id": "fef838af1af24f498c64d673f3b47e1d",
        "Name": "Python Script",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -349.510648807384,
        "Y": 392.57132588591094
      },
      {
        "Id": "79ee724264ea4f11acb4790f2303b048",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -93.138522902846319,
        "Y": 394.73213034463879
      },
      {
        "Id": "744307748a9b4306929885adf0e8b6d0",
        "Name": "Base Point",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 911.63572898044629,
        "Y": 418.16156551218489
      },
      {
        "Id": "7ef48a5819464c3ca2eb23608176b8d4",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -380.51171718055753,
        "Y": 720.02928431754572
      },
      {
        "Id": "65c5b4d99ecc4bc1a6bc7bc7d35c0579",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -374.72166668771206,
        "Y": 1078.3606476243756
      },
      {
        "Id": "4486620b53c343a1b5d3c7c30110afef",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -374.72166668771206,
        "Y": 900.66790033026143
      },
      {
        "Id": "5130439c11b643618a4aaa128803b30c",
        "Name": "Shared",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1451.2577660156971,
        "Y": 416.67560791329373
      },
      {
        "Id": "38492a0920064bbf80f5adc1bb17e835",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 145.13536346941112,
        "Y": 382.65300025241845
      },
      {
        "Id": "3acf0d9f98374929bc8e0b07b6ed3370",
        "Name": "Passthrough",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1117.4418353632743,
        "Y": 361.25522377690277
      }
    ],
    "Annotations": [],
    "X": 542.12793709436255,
    "Y": 109.47166590723845,
    "Zoom": 0.69233337744122614
  }
}